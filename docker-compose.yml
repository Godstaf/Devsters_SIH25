services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: devsters-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: devsters_db
      POSTGRES_USER: devsters_user
      POSTGRES_PASSWORD: sih2025devsters
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devsters_user -d devsters_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: devsters-backend
    working_dir: /app
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
      - ./static:/app/static
      - ./frontend/dist:/app/frontend
    ports:
      - "8000:8000"
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=devsters_user
      - DB_PASSWORD=sih2025devsters
      - DB_NAME=devsters_db
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: node:20-slim
    container_name: devsters-frontend
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    command: sh -c "npm ci --no-audit --no-fund && npm run build && tail -f /dev/null"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

volumes:
  postgres_data:
